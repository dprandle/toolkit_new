<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Toolkit</class>
 <widget class="QMainWindow" name="Toolkit">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1137</width>
    <height>900</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Build and Battle Toolkit 1.00.00</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
color: white;
background-color: rgb(55,55,55);
}

QComboBox
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(97, 97, 97, 255), stop:0.642045 rgba(30, 30, 30, 255), stop:1 rgba(48, 48, 48, 255));
border: 1px solid rgb(30,30,30);
border-radius: 5px;
min-width: 6em;
padding: 1px 18px 1px 3px;
}

QStatusBar
{
	background-color: rgb(208, 93, 0);
}

QListView
{
background-color: rgb(30,30,30);
}

QComboBox:hover
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(82, 82, 82, 255), stop:0.642045 rgba(14, 14, 14, 255), stop:1 rgba(61, 61, 61, 255));
border: 1px solid rgb(30,30,30);
border-radius: 5px;
min-width: 80px;
}

 QComboBox:!editable:on, QComboBox::drop-down:editable:on 
{
	background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(18, 18, 18, 255), stop:0.642045 rgba(84, 84, 84, 255), stop:0.994318 rgba(14, 14, 14, 255));
border: 1px solid rgb(30,30,30);
 }

QComboBox:down-arrow
{
background-color: transparent;
image: url(:/VecTB/icons/toolbars/Down_Arrow.png);
width: 7px;
height: 7px;
}

QComboBox:disabled
{
background-color: rgb(100,100,100);
color: rgb(200,200,200);
border: 1px solid rgb(100,100,100);
}

 QComboBox::drop-down 
{
     border-left: none; 
 }

 QComboBox QAbstractItemView 
{
selection-background-color:  rgb(90, 90, 90);
border: 1px solid rgb(100,100,100);
 }

QGroupBox {
border: 1px solid rgb(100,100,100);
border-radius: 5px;
margin-top: 1ex;
padding-top: 20px;
}

QGroupBox::title
{
subcontrol-origin: margin;
}

QLineEdit {
background-color: rgb(30,30,30);
border: 1px solid rgb(100,100,100);
}

QCheckBox::indicator {
	background-color: rgb(30,30,30);
	border: 1px solid rgb(100,100,100);
    width: 15px;
    height: 15px;
}

QCheckBox::indicator:checked {
    image: url(:/style_items/icons/style_items/checkmark-symbol.png);
}

QCheckBox::indicator:indeterminate {
    image: url(:/style_items/icons/style_items/checkbox_indeterminate.png);
}

QPushButton {
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(97, 97, 97, 255), stop:0.642045 rgba(30, 30, 30, 255), stop:1 rgba(48, 48, 48, 255));
border-radius: 3px;
border: 1px solid rgb(100,100,100);
padding: 5px;
color: white;
min-width: 80px;
max-height: 12px;
}

QPushButton:disabled {
background-color: rgb(100,100,100);
color: rgb(200,200,200);
border: 1px solid rgb(100,100,100);
min-width: 6em;
}

QPushButton:hover {
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(236, 100, 0, 255), stop:0.625 rgba(255, 118, 18, 255), stop:1 rgba(196, 66, 0, 255));
}

QPushButton:pressed {
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(209, 88, 0, 255), stop:0.625 rgba(118, 55, 8, 255), stop:1 rgba(176, 59, 0, 255));
border: 1px solid rgb(30,30,30);
}

QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
        border-image: none;
		image: url(:/style_items/icons/style_items/tree_branch_closed.png);
}

QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings  {
		border-image: none;
		image: url(:/style_items/icons/style_items/tree_branch_open.png);
}

/* QSpinBox and QDoubleSpinBox Section*/
QSpinBox,QDoubleSpinBox
{
background-color: rgb(30,30,30);
color: white;
border: 1px solid rgb(100,100,100);
min-width: 50px;
}

QLabel:disabled
{
color: rgb(200,200,200);
}

QLineEdit:disabled,QSpinBox:disabled,QDoubleSpinBox:disabled
{
background-color: rgb(100,100,100);
color: rgb(200,200,200);
border: 1px solid rgb(100,100,100);
min-width: 50px;
}

QSpinBox::up-button,QDoubleSpinBox::up-button
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(97, 97, 97, 255), stop:0.642045 rgba(30, 30, 30, 255), stop:1 rgba(48, 48, 48, 255));
}

QSpinBox::down-button,QDoubleSpinBox::down-button
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(97, 97, 97, 255), stop:0.642045 rgba(30, 30, 30, 255), stop:1 rgba(48, 48, 48, 255));
}

QSpinBox::up-button:hover,QDoubleSpinBox::up-button:hover
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(236, 100, 0, 255), stop:0.625 rgba(255, 118, 18, 255), stop:1 rgba(196, 66, 0, 255));
}

QSpinBox::down-button:hover,QDoubleSpinBox::down-button:hover
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(236, 100, 0, 255), stop:0.625 rgba(255, 118, 18, 255), stop:1 rgba(196, 66, 0, 255));
}

QSpinBox::up-button:pressed,QDoubleSpinBox::up-button:pressed
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(124, 52, 0, 255), stop:0.625 rgba(36, 16, 2, 255), stop:1 rgba(97, 32, 0, 255));
}

QSpinBox::down-button:pressed,QDoubleSpinBox::down-button:pressed
{
background-color: qlineargradient(spread:reflect, x1:0, y1:0.051, x2:0, y2:1, stop:0 rgba(124, 52, 0, 255), stop:0.625 rgba(36, 16, 2, 255), stop:1 rgba(97, 32, 0, 255));
}

QSpinBox::up-button:disabled,QDoubleSpinBox::up-button:disabled
{
background-color: rgb(150,150,150);
}

QSpinBox::down-button:disabled,QDoubleSpinBox::down-button:disabled
{
background-color: rgb(150,150,150);
}

QSpinBox::up-arrow,QDoubleSpinBox::up-arrow
{
image: url(:/VecTB/icons/toolbars/Up_Arrow.png);
width: 6px;
height: 6px; 
}

QSpinBox::down-arrow,QDoubleSpinBox::down-arrow
{
image: url(:/VecTB/icons/toolbars/Down_Arrow.png);
width: 6px;
height: 6px; 
}

QSpinBox::up-arrow:hover,QDoubleSpinBox::up-arrow:hover
{
image: url(:/VecTB/icons/toolbars/Up_Arrow.png);
width: 6px;
height: 6px; 
}

QSpinBox::down-arrow:hover,QDoubleSpinBox::down-arrow:hover
{
image: url(:/VecTB/icons/toolbars/Down_Arrow.png);
width: 6px;
height: 6px; 
}

QSpinBox::up-arrow:disabled,QDoubleSpinBox::up-arrow:disabled
{
image: url(:/VecTB/icons/toolbars/Up_Arrow.png);
width: 6px;
height: 6px; 
}

QSpinBox::down-arrow:disabled,QDoubleSpinBox::down-arrow:disabled
{
image: url(:/VecTB/icons/toolbars/Down_Arrow.png);
width: 6px;
height: 6px; 
}
/* End of code for QSpinBox and QDoubleSpinBox*/


QMenuBar::item {
background-color: transparent;
}

QMenuBar::item:selected {
background-color: rgb(90, 90, 90);}

QMenu 
{
border: 1px solid transparent;
border-color: rgb(100, 100, 100);
min-width: 6em;
}

QMenu::separator 
{
background-color: rgb(100,100,100);
width: 1px;
height: 1px;
}

QMenu::item 
{
background-color: rgb(30, 30, 30);
}

QMenu::item:selected 
{
background-color: rgb(90, 90, 90);
}

QToolBar {
spacing: 5px;
padding: 3px;
border-bottom: 1px solid rgb(75,75,75);
}

QToolBar::separator {
background-color: rgb(100,100,100);
width: 1px;
height: 1px;
}

/* TOOLBUTTON */

/* END TOOLBUTTON */

QHeaderView::section {
background-color: rgb(70, 70, 70);
}

QTextEdit{
background-color: rgb(30,30,30);
border: 1px solid rgb(100,100,100);
}

QPlainTextEdit{
background-color: rgb(30,30,30);
border: 1px solid rgb(100,100,100);
}

QTreeWidget
{
background-color: rgb(30,30,30);
border: 1px solid rgb(100,100,100);
}

QListWidget
{
background-color: rgb(30,30,30);
border: 1px solid rgb(100,100,100);
}

QDockWidget::title {
    text-align: left; /* align the text to the left */
	font: 57 12pt &quot;Ubuntu&quot;;
    background: rgb(45,45,45);
    padding-left: 5px;
}

QMainWindow::separator {
    background: rgb(40,40,40);
    width: 4x; /* when vertical */
    height: 4px; /* when horizontal */
}</string>
  </property>
  <property name="iconSize">
   <size>
    <width>24</width>
    <height>24</height>
   </size>
  </property>
  <property name="animated">
   <bool>true</bool>
  </property>
  <property name="documentMode">
   <bool>false</bool>
  </property>
  <property name="dockNestingEnabled">
   <bool>true</bool>
  </property>
  <property name="dockOptions">
   <set>QMainWindow::AllowNestedDocks|QMainWindow::AllowTabbedDocks|QMainWindow::AnimatedDocks</set>
  </property>
  <property name="unifiedTitleAndToolBarOnMac">
   <bool>false</bool>
  </property>
  <widget class="QWidget" name="centralWidget">
   <property name="cursor">
    <cursorShape>ArrowCursor</cursorShape>
   </property>
   <property name="focusPolicy">
    <enum>Qt::StrongFocus</enum>
   </property>
   <widget class="QCheckBox" name="checkBox">
    <property name="geometry">
     <rect>
      <x>190</x>
      <y>300</y>
      <width>85</width>
      <height>21</height>
     </rect>
    </property>
    <property name="text">
     <string>CheckBox</string>
    </property>
    <property name="checked">
     <bool>false</bool>
    </property>
    <property name="autoRepeat">
     <bool>false</bool>
    </property>
    <property name="tristate">
     <bool>true</bool>
    </property>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1137</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <widget class="QMenu" name="menu_view">
    <property name="title">
     <string>View</string>
    </property>
    <addaction name="actionSave_View"/>
    <addaction name="actionLoad_View"/>
   </widget>
   <widget class="QMenu" name="menu_file">
    <property name="title">
     <string>&amp;File</string>
    </property>
   </widget>
   <addaction name="menu_file"/>
   <addaction name="menu_view"/>
  </widget>
  <widget class="QStatusBar" name="statusBar"/>
  <widget class="Custom_Dock_Widget" name="dockWidget_game_view">
   <property name="floating">
    <bool>false</bool>
   </property>
   <property name="features">
    <set>QDockWidget::AllDockWidgetFeatures</set>
   </property>
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Game View</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Game_View" name="game_view"/>
  </widget>
  <widget class="QToolBar" name="toolBar_top">
   <property name="enabled">
    <bool>true</bool>
   </property>
   <property name="acceptDrops">
    <bool>false</bool>
   </property>
   <property name="windowTitle">
    <string>toolBar</string>
   </property>
   <property name="layoutDirection">
    <enum>Qt::LeftToRight</enum>
   </property>
   <property name="movable">
    <bool>false</bool>
   </property>
   <property name="iconSize">
    <size>
     <width>20</width>
     <height>20</height>
    </size>
   </property>
   <property name="toolButtonStyle">
    <enum>Qt::ToolButtonIconOnly</enum>
   </property>
   <property name="floatable">
    <bool>false</bool>
   </property>
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
   <addaction name="separator"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_graph">
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Graph</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Graph_View" name="graph"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_map_editor">
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Editor</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Map_Editor" name="map_editor"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_details">
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Node Information</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>2</number>
   </attribute>
   <widget class="Details_View" name="details"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_assets">
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Assets</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Asset_View" name="assets"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_console">
   <property name="floating">
    <bool>false</bool>
   </property>
   <property name="features">
    <set>QDockWidget::AllDockWidgetFeatures</set>
   </property>
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Console</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Console" name="console"/>
  </widget>
  <widget class="Custom_Dock_Widget" name="dockWidget_prefab_view">
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <property name="windowTitle">
    <string>Prefabs</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="Prefab_View" name="prefab_view"/>
  </widget>
  <action name="actionSave_View">
   <property name="text">
    <string>Save View</string>
   </property>
  </action>
  <action name="actionLoad_View">
   <property name="text">
    <string>Load View</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>Map_Editor</class>
   <extends>QWidget</extends>
   <header location="global">map_editor.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Game_View</class>
   <extends>QWidget</extends>
   <header location="global">game_view.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Console</class>
   <extends>QWidget</extends>
   <header location="global">console.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Graph_View</class>
   <extends>QWidget</extends>
   <header location="global">graph_view.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Details_View</class>
   <extends>QWidget</extends>
   <header location="global">details_view.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Asset_View</class>
   <extends>QWidget</extends>
   <header location="global">asset_view.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Prefab_View</class>
   <extends>QWidget</extends>
   <header location="global">prefab_view.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Custom_Dock_Widget</class>
   <extends>QDockWidget</extends>
   <header location="global">custom_dock_widget.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="../toolkit.qrc"/>
 </resources>
 <connections/>
 <slots>
  <slot>on_select(bool)</slot>
  <slot>on_select_area(bool)</slot>
  <slot>on_selection_brush(bool)</slot>
  <slot>on_tile_brush(bool)</slot>
  <slot>on_object_brush(bool)</slot>
  <slot>on_eraser_brush(bool)</slot>
  <slot>on_properties_click(bool)</slot>
  <slot>on_erase_click(bool)</slot>
  <slot>on_new()</slot>
  <slot>on_load()</slot>
  <slot>on_save()</slot>
  <slot>on_undo()</slot>
  <slot>on_redo()</slot>
  <slot>on_unlock(bool)</slot>
  <slot>on_stamp_mode(bool)</slot>
  <slot>on_layer_mode(bool)</slot>
  <slot>on_del_selection()</slot>
  <slot>on_replace_tile()</slot>
  <slot>on_new_brush()</slot>
  <slot>on_hide_selection()</slot>
  <slot>on_unhide_selection()</slot>
  <slot>on_cam_center(bool)</slot>
  <slot>on_cam_iso(bool)</slot>
  <slot>on_cam_top(bool)</slot>
  <slot>on_switch_maps()</slot>
  <slot>on_cam_front(bool)</slot>
  <slot>on_object_center(bool)</slot>
  <slot>on_camera_settings()</slot>
  <slot>on_show_all_hidden(bool)</slot>
  <slot>on_mirror_mode(bool)</slot>
  <slot>on_toggle_lighting(bool)</slot>
  <slot>on_toggle_xfb(bool)</slot>
  <slot>on_resource_browser()</slot>
 </slots>
</ui>
